{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/navigation/CustomDrawer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TouchableOpacityComponent } from \"react-native-web/dist/index\";\nimport { createDrawerNavigator, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport { MainLayout } from \"../screens\";\nimport { COLORS, SIZES, FONTS, constants, icons, dummyData } from \"../constants\";\nvar Drawer = createDrawerNavigator();\n\nvar CustomDrawerItem = function CustomDrawerItem(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon;\n  return React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      height: 40,\n      marginBottom: SIZES.base,\n      alignItems: 'center',\n      paddingLeft: SIZES.radius,\n      borderRadius: SIZES.base\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: icon,\n    style: {\n      width: 20,\n      height: 20,\n      tintColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      marginLeft: 15,\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }\n  }, label));\n};\n\nvar CustomDrawerContent = function CustomDrawerContent(_ref2) {\n  var _dummyData$myProfile, _dummyData$myProfile2;\n\n  var navigation = _ref2.navigation;\n  return React.createElement(DrawerContentScrollView, {\n    scrollEnabled: true,\n    contentContainerStyle: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return navigation.closeDrawer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: icons.cross,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 25\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      marginTop: SIZES.radius,\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      return console.log(\"Profile\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: (_dummyData$myProfile = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile.profile_image,\n    style: {\n      width: 50,\n      height: 50,\n      borderRadius: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      marginLeft: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, (_dummyData$myProfile2 = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile2.name), React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.body4),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 25\n    }\n  }, \"View your profile\"))), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: SIZES.padding\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 17\n    }\n  }, React.createElement(CustomDrawerItem, {\n    label: constants.screens.home,\n    icon: icons.home,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.my_wallet,\n    icon: icons.wallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.notification,\n    icon: icons.notification,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.favourite,\n    icon: icons.favourite,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 1,\n      marginVertical: SIZES.radius,\n      marginLeft: SIZES.radius,\n      backgroundColor: COLORS.lightGray1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Track your order\",\n    icon: icons.location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Coupons\",\n    icon: icons.coupon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Settings\",\n    icon: icons.setting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Invite a Friend\",\n    icon: icons.setting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar CustomDrawer = function CustomDrawer() {\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerType: \"slide\",\n    overlayColor: \"transparent\",\n    drawerStyle: {\n      flex: 1,\n      width: '65%',\n      paddingRight: 20,\n      backgroundColor: 'transparent'\n    },\n    sceneContainerStyle: {\n      backgroundColor: 'transparent'\n    },\n    initialRouteName: \"MainLayout\",\n    drawerContent: function drawerContent(props) {\n      return React.createElement(CustomDrawerContent, {\n        navigation: props.navigation,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 17\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"MainLayout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, function (props) {\n    return React.createElement(MainLayout, _extends({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 35\n      }\n    }));\n  })));\n};\n\nexport default CustomDrawer;","map":{"version":3,"sources":["/home/thomas/ReactNativeProjects/FoodDeliveryApp/navigation/CustomDrawer.js"],"names":["React","TouchableOpacityComponent","createDrawerNavigator","DrawerContentScrollView","MainLayout","COLORS","SIZES","FONTS","constants","icons","dummyData","Drawer","CustomDrawerItem","label","icon","flexDirection","height","marginBottom","base","alignItems","paddingLeft","radius","borderRadius","width","tintColor","white","marginLeft","color","h3","CustomDrawerContent","navigation","flex","paddingHorizontal","justifyContent","closeDrawer","cross","marginTop","console","log","myProfile","profile_image","name","body4","padding","screens","home","my_wallet","wallet","notification","favourite","marginVertical","backgroundColor","lightGray1","location","coupon","setting","CustomDrawer","primary","paddingRight","props"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity, TouchableOpacityComponent\n} from \"react-native\";\nimport {\n    createDrawerNavigator,\n    DrawerContentScrollView\n} from \"@react-navigation/drawer\";\nimport { MainLayout } from '../screens'\nimport {\n    COLORS,\n    SIZES,\n    FONTS,\n    constants,\n    icons,\n    dummyData\n} from \"../constants\";\n\nconst Drawer = createDrawerNavigator()\n\nconst CustomDrawerItem = ({label, icon}) => {\n    return (\n        <TouchableOpacity\n            style={{\n                flexDirection: 'row',\n                height: 40,\n                marginBottom: SIZES.base,\n                alignItems: 'center',\n                paddingLeft: SIZES.radius,\n                borderRadius: SIZES.base\n            }}\n        >\n            <Image\n                source={icon}\n                style={{\n                    width: 20,\n                    height: 20,\n                    tintColor: COLORS.white\n                }}\n            />\n            <Text\n                style={{\n                    marginLeft: 15,\n                    color: COLORS.white,\n                    ...FONTS.h3\n                }}\n            >\n                {label}\n            </Text>\n        </TouchableOpacity>\n    )\n}\n\nconst CustomDrawerContent = ({navigation}) => {\n    return (\n        <DrawerContentScrollView\n            scrollEnabled={true}\n            contentContainerStyle={{ flex: 1 }}\n        >\n            <View\n                style={{\n                    flex: 1,\n                    paddingHorizontal: SIZES.radius\n                }}\n            >\n                {/* Close Button */}\n                <View\n                    style={{\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <TouchableOpacity\n                        style={{\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                        onPress={() => navigation.closeDrawer()}\n                    >\n                        <Image\n                            source={icons.cross}\n\n                        />\n                    </TouchableOpacity>\n                </View>\n\n\n                {/* Profile */}\n                <TouchableOpacity\n                    style={{\n                        flexDirection: 'row',\n                        marginTop: SIZES.radius,\n                        alignItems: 'center'\n                    }}\n                    onPress={() => console.log(\"Profile\")}\n                >\n                    <Image\n                        source={dummyData.myProfile?.profile_image}\n                        style={{\n                            width: 50,\n                            height: 50,\n                            borderRadius: SIZES.radius\n                        }}\n                    />\n\n                    <View\n                        style={{\n                            marginLeft:SIZES.radius\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color: COLORS.white,\n                                ...FONTS.h3\n                            }}\n                        >{dummyData.myProfile?.name}</Text>\n                        <Text\n                            style={{\n                                color: COLORS.white,\n                                ...FONTS.body4\n                            }}>View your profile</Text>\n                    </View>\n                </TouchableOpacity>\n\n\n                {/* Drawer Items */}\n                <View\n                    style={{\n                        flex: 1,\n                        marginTop: SIZES.padding\n                    }}\n                >\n                    <CustomDrawerItem\n                        label={constants.screens.home}\n                        icon={icons.home}\n                    />\n\n                    <CustomDrawerItem\n                        label={constants.screens.my_wallet}\n                        icon={icons.wallet}\n                    />\n\n                    <CustomDrawerItem\n                        label={constants.screens.notification}\n                        icon={icons.notification}\n                    />\n\n                    <CustomDrawerItem\n                        label={constants.screens.favourite}\n                        icon={icons.favourite}\n                    />\n\n                     {/* Line Divider */}\n                    <View\n                        style={{\n                            height: 1,\n                            marginVertical: SIZES.radius,\n                            marginLeft: SIZES.radius,\n                            backgroundColor: COLORS.lightGray1\n                        }}\n                    />\n\n                    <CustomDrawerItem\n                        label= \"Track your order\"\n                        icon={icons.location}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Coupons\"\n                        icon={icons.coupon}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Settings\"\n                        icon={icons.setting}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Invite a Friend\"\n                        icon={icons.setting}\n                    />\n\n                </View>\n            </View>\n        </DrawerContentScrollView>\n    )\n}\n\nconst CustomDrawer = () => {\n    return (\n        <View\n            style={{\n                flex: 1,\n                backgroundColor: COLORS.primary\n            }}\n        >\n                <Drawer.Navigator\n                    drawerType={\"slide\"}\n                    overlayColor={\"transparent\"}\n                    drawerStyle={{\n                        flex: 1,\n                        width: '65%',\n                        paddingRight: 20,\n                        backgroundColor: 'transparent'\n                    }}\n                    sceneContainerStyle={{\n                        backgroundColor: 'transparent'\n                    }}\n                    initialRouteName=\"MainLayout\"\n                    drawerContent={props => {\n                        return (\n                            <CustomDrawerContent\n                                navigation={props.navigation}\n                            />\n                        )\n                    }}\n                >\n\n                    <Drawer.Screen name={\"MainLayout\"}>\n                        {props => <MainLayout {...props}/>}\n                    </Drawer.Screen>\n\n                </Drawer.Navigator>\n        </View>\n    )\n}\n\nexport default CustomDrawer;\n"]},"metadata":{},"sourceType":"module"}