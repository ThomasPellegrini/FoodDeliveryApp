{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableOpacityComponent } from \"react-native-web/dist/index\";\nimport { TouchableWithoutFeedbackComponent } from \"react-native-web/dist/index\";\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from \"react-native-reanimated\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from \"react-redux\";\nimport { setSelectedTab as _setSelectedTab } from \"../stores/tab/tabActions\";\nimport { Home, Search, CartTab, Favourite, Notification } from \"../screens\";\nimport { Header } from \"../components\";\nimport { COLORS, FONTS, SIZES, icons, constants, dummyData } from \"../constants\";\n\nvar TabButton = function TabButton(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon,\n      isFocused = _ref.isFocused,\n      onPress = _ref.onPress,\n      outerContainerStyle = _ref.outerContainerStyle,\n      innerContainerStyle = _ref.innerContainerStyle;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [{\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, outerContainerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Animated.View, {\n    style: [{\n      flexDirection: 'row',\n      width: '80%',\n      height: 50,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 25\n    }, innerContainerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: icon,\n    style: {\n      width: 20,\n      height: 20,\n      tintColor: isFocused ? COLORS.white : COLORS.gray\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), isFocused && React.createElement(Text, {\n    numberOfLines: 1,\n    style: _objectSpread({\n      marginLeft: SIZES.base,\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, label))));\n};\n\nvar MainLayout = function MainLayout(_ref2) {\n  var _dummyData$myProfile;\n\n  var drawerAnimationStyle = _ref2.drawerAnimationStyle,\n      navigation = _ref2.navigation,\n      selectedTab = _ref2.selectedTab,\n      setSelectedTab = _ref2.setSelectedTab;\n  var flatListRef = React.useRef();\n  var homeTabFlex = useSharedValue(1);\n  var searchTabColor = useSharedValue(COLORS.white);\n  var searchTabFlex = useSharedValue(1);\n  var cartTabColor = useSharedValue(COLORS.white);\n  var cartTabFlex = useSharedValue(1);\n  var homeTabColor = useSharedValue(COLORS.white);\n  var favouriteTabFlex = useSharedValue(1);\n  var favouriteTabColor = useSharedValue(COLORS.white);\n  var notificationTabFlex = useSharedValue(1);\n  var notificationTabColor = useSharedValue(COLORS.white);\n  var homeFlexStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        flex: homeTabFlex.value\n      };\n    };\n\n    _f._closure = {\n      homeTabFlex\n    };\n    _f.asString = \"function _f(){const{homeTabFlex}=jsThis._closure;{return{flex:homeTabFlex.value};}}\";\n    _f.__workletHash = 8369979603736;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (110:43)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var homeColorStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        backgroundColor: homeTabColor.value\n      };\n    };\n\n    _f._closure = {\n      homeTabColor\n    };\n    _f.asString = \"function _f(){const{homeTabColor}=jsThis._closure;{return{backgroundColor:homeTabColor.value};}}\";\n    _f.__workletHash = 8558803326364;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (116:44)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var searchFlexStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        flex: searchTabFlex.value\n      };\n    };\n\n    _f._closure = {\n      searchTabFlex\n    };\n    _f.asString = \"function _f(){const{searchTabFlex}=jsThis._closure;{return{flex:searchTabFlex.value};}}\";\n    _f.__workletHash = 9512719342616;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (122:45)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var searchColorStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        backgroundColor: searchTabColor.value\n      };\n    };\n\n    _f._closure = {\n      searchTabColor\n    };\n    _f.asString = \"function _f(){const{searchTabColor}=jsThis._closure;{return{backgroundColor:searchTabColor.value};}}\";\n    _f.__workletHash = 12435897955420;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (128:46)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var cartFlexStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        flex: cartTabFlex.value\n      };\n    };\n\n    _f._closure = {\n      cartTabFlex\n    };\n    _f.asString = \"function _f(){const{cartTabFlex}=jsThis._closure;{return{flex:cartTabFlex.value};}}\";\n    _f.__workletHash = 4100376441112;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (134:43)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var cartColorStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        backgroundColor: cartTabColor.value\n      };\n    };\n\n    _f._closure = {\n      cartTabColor\n    };\n    _f.asString = \"function _f(){const{cartTabColor}=jsThis._closure;{return{backgroundColor:cartTabColor.value};}}\";\n    _f.__workletHash = 16757452755932;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (140:44)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var favouriteFlexStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        flex: favouriteTabFlex.value\n      };\n    };\n\n    _f._closure = {\n      favouriteTabFlex\n    };\n    _f.asString = \"function _f(){const{favouriteTabFlex}=jsThis._closure;{return{flex:favouriteTabFlex.value};}}\";\n    _f.__workletHash = 15128204686168;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (146:48)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var favouriteColorStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        backgroundColor: favouriteTabColor.value\n      };\n    };\n\n    _f._closure = {\n      favouriteTabColor\n    };\n    _f.asString = \"function _f(){const{favouriteTabColor}=jsThis._closure;{return{backgroundColor:favouriteTabColor.value};}}\";\n    _f.__workletHash = 2394155567004;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (152:49)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var notificationFlexStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        flex: notificationTabFlex.value\n      };\n    };\n\n    _f._closure = {\n      notificationTabFlex\n    };\n    _f.asString = \"function _f(){const{notificationTabFlex}=jsThis._closure;{return{flex:notificationTabFlex.value};}}\";\n    _f.__workletHash = 8193707633752;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (158:51)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  var notificationColorStyle = useAnimatedStyle(function () {\n    const _f = function () {\n      return {\n        backgroundColor: notificationTabColor.value\n      };\n    };\n\n    _f._closure = {\n      notificationTabColor\n    };\n    _f.asString = \"function _f(){const{notificationTabColor}=jsThis._closure;{return{backgroundColor:notificationTabColor.value};}}\";\n    _f.__workletHash = 16566545161116;\n    _f.__location = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js (164:52)\";\n\n    global.__reanimatedWorkletInit(_f);\n\n    return _f;\n  }());\n  React.useEffect(function () {\n    setSelectedTab(constants.screens.home);\n  }, []);\n  React.useEffect(function () {\n    if (selectedTab == constants.screens.home) {\n      var _flatListRef$current;\n\n      flatListRef == null ? void 0 : (_flatListRef$current = flatListRef.current) == null ? void 0 : _flatListRef$current.scrollToIndex({\n        index: 0,\n        animated: false\n      });\n      homeTabFlex.value = withTiming(4, {\n        duration: 500\n      });\n      homeTabColor.value = withTiming(COLORS.primary, {\n        duration: 500\n      });\n    } else {\n      homeTabFlex.value = withTiming(1, {\n        duration: 500\n      });\n      homeTabColor.value = withTiming(COLORS.white, {\n        duration: 500\n      });\n    }\n\n    if (selectedTab == constants.screens.search) {\n      var _flatListRef$current2;\n\n      flatListRef == null ? void 0 : (_flatListRef$current2 = flatListRef.current) == null ? void 0 : _flatListRef$current2.scrollToIndex({\n        index: 1,\n        animated: false\n      });\n      searchTabFlex.value = withTiming(4, {\n        duration: 500\n      });\n      searchTabColor.value = withTiming(COLORS.primary, {\n        duration: 500\n      });\n    } else {\n      searchTabFlex.value = withTiming(1, {\n        duration: 500\n      });\n      searchTabColor.value = withTiming(COLORS.white, {\n        duration: 500\n      });\n    }\n\n    if (selectedTab == constants.screens.cart) {\n      var _flatListRef$current3;\n\n      flatListRef == null ? void 0 : (_flatListRef$current3 = flatListRef.current) == null ? void 0 : _flatListRef$current3.scrollToIndex({\n        index: 2,\n        animated: false\n      });\n      cartTabFlex.value = withTiming(4, {\n        duration: 500\n      });\n      cartTabColor.value = withTiming(COLORS.primary, {\n        duration: 500\n      });\n    } else {\n      cartTabFlex.value = withTiming(1, {\n        duration: 500\n      });\n      cartTabColor.value = withTiming(COLORS.white, {\n        duration: 500\n      });\n    }\n\n    if (selectedTab == constants.screens.favourite) {\n      var _flatListRef$current4;\n\n      flatListRef == null ? void 0 : (_flatListRef$current4 = flatListRef.current) == null ? void 0 : _flatListRef$current4.scrollToIndex({\n        index: 3,\n        animated: false\n      });\n      favouriteTabFlex.value = withTiming(4, {\n        duration: 500\n      });\n      favouriteTabColor.value = withTiming(COLORS.primary, {\n        duration: 500\n      });\n    } else {\n      favouriteTabFlex.value = withTiming(1, {\n        duration: 500\n      });\n      favouriteTabColor.value = withTiming(COLORS.white, {\n        duration: 500\n      });\n    }\n\n    if (selectedTab == constants.screens.notification) {\n      var _flatListRef$current5;\n\n      flatListRef == null ? void 0 : (_flatListRef$current5 = flatListRef.current) == null ? void 0 : _flatListRef$current5.scrollToIndex({\n        index: 4,\n        animated: false\n      });\n      notificationTabFlex.value = withTiming(4, {\n        duration: 500\n      });\n      notificationTabColor.value = withTiming(COLORS.primary, {\n        duration: 500\n      });\n    } else {\n      notificationTabFlex.value = withTiming(1, {\n        duration: 500\n      });\n      notificationTabColor.value = withTiming(COLORS.white, {\n        duration: 500\n      });\n    }\n  }, [selectedTab]);\n  return React.createElement(Animated.View, {\n    style: _objectSpread({\n      flex: 1,\n      backgroundColor: COLORS.white\n    }, drawerAnimationStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    containerStyle: {\n      height: 50,\n      paddingHorizontal: SIZES.padding,\n      marginTop: 40,\n      alignItems: 'center'\n    },\n    title: selectedTab.toUpperCase(),\n    leftComponent: React.createElement(TouchableOpacity, {\n      style: {\n        width: 40,\n        height: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1,\n        borderColor: COLORS.gray2,\n        borderRadius: SIZES.radius\n      },\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: icons.menu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 25\n      }\n    })),\n    rightComponent: React.createElement(TouchableOpacity, {\n      style: {\n        borderRadius: SIZES.radius,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 284,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: dummyData == null ? void 0 : (_dummyData$myProfile = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile.profile_image,\n      style: {\n        width: 40,\n        height: 40,\n        borderRadius: SIZES.radius\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 291,\n        columnNumber: 25\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 13\n    }\n  }, React.createElement(FlatList, {\n    ref: flatListRef,\n    horizontal: true,\n    scrollEnabled: false,\n    pagingEnabled: true,\n    snapToAlignment: \"center\",\n    snapToInterval: SIZES.width,\n    showsHorizontalScrollIndicator: false,\n    data: constants.bottom_tabs,\n    keyExtractor: function keyExtractor(item) {\n      return \"\" + item.id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return React.createElement(View, {\n        style: {\n          height: SIZES.height,\n          width: SIZES.width\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 29\n        }\n      }, item.label == constants.screens.home && React.createElement(Home, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 329,\n          columnNumber: 74\n        }\n      }), item.label == constants.screens.search && React.createElement(Search, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 76\n        }\n      }), item.label == constants.screens.cart && React.createElement(CartTab, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 74\n        }\n      }), item.label == constants.screens.favourite && React.createElement(Favourite, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 79\n        }\n      }), item.label == constants.screens.notification && React.createElement(Notification, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 333,\n          columnNumber: 82\n        }\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: {\n      height: 100,\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 13\n    }\n  }, React.createElement(LinearGradient, {\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 4\n    },\n    colors: [COLORS.transparent, COLORS.black],\n    style: {\n      position: 'absolute',\n      top: -20,\n      left: 0,\n      right: 0,\n      height: 100,\n      borderTopLeftRadius: 15,\n      borderTopRightRadius: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      paddingHorizontal: SIZES.radius,\n      paddingBottom: 10,\n      borderTopLeftRadius: 20,\n      borderTopRightRadius: 20,\n      backgroundColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 17\n    }\n  }, React.createElement(TabButton, {\n    label: constants.screens.home,\n    icon: icons.home,\n    isFocused: selectedTab == constants.screens.home,\n    outerContainerStyle: homeFlexStyle,\n    innerContainerStyle: homeColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.home);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 377,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.search,\n    icon: icons.search,\n    isFocused: selectedTab == constants.screens.search,\n    outerContainerStyle: searchFlexStyle,\n    innerContainerStyle: searchColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.search);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 386,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.cart,\n    icon: icons.cart,\n    isFocused: selectedTab == constants.screens.cart,\n    outerContainerStyle: cartFlexStyle,\n    innerContainerStyle: cartColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.cart);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.favourite,\n    icon: icons.favourite,\n    isFocused: selectedTab == constants.screens.favourite,\n    outerContainerStyle: favouriteFlexStyle,\n    innerContainerStyle: favouriteColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.favourite);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.notification,\n    icon: icons.notification,\n    isFocused: selectedTab == constants.screens.notification,\n    outerContainerStyle: notificationFlexStyle,\n    innerContainerStyle: notificationColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.notification);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 21\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedTab: state.tabReducer.selectedTab\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSelectedTab: function setSelectedTab(selectedTab) {\n      return dispatch(_setSelectedTab(selectedTab));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":{"version":3,"sources":["/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js"],"names":["React","TouchableOpacityComponent","TouchableWithoutFeedbackComponent","Animated","useSharedValue","useAnimatedStyle","withTiming","LinearGradient","connect","setSelectedTab","Home","Search","CartTab","Favourite","Notification","Header","COLORS","FONTS","SIZES","icons","constants","dummyData","TabButton","label","icon","isFocused","onPress","outerContainerStyle","innerContainerStyle","flex","alignItems","justifyContent","flexDirection","width","height","borderRadius","tintColor","white","gray","marginLeft","base","color","h3","MainLayout","drawerAnimationStyle","navigation","selectedTab","flatListRef","useRef","homeTabFlex","searchTabColor","searchTabFlex","cartTabColor","cartTabFlex","homeTabColor","favouriteTabFlex","favouriteTabColor","notificationTabFlex","notificationTabColor","homeFlexStyle","value","homeColorStyle","backgroundColor","searchFlexStyle","searchColorStyle","cartFlexStyle","cartColorStyle","favouriteFlexStyle","favouriteColorStyle","notificationFlexStyle","notificationColorStyle","useEffect","screens","home","current","scrollToIndex","index","animated","duration","primary","search","cart","favourite","notification","paddingHorizontal","padding","marginTop","toUpperCase","borderWidth","borderColor","gray2","radius","openDrawer","menu","myProfile","profile_image","bottom_tabs","item","id","x","y","transparent","black","position","top","left","right","borderTopLeftRadius","borderTopRightRadius","paddingBottom","mapStateToProps","state","tabReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    Image,\n    FlatList, TouchableOpacityComponent, TouchableWithoutFeedbackComponent\n} from 'react-native';\n\nimport Animated, {\n    useSharedValue,\n    useAnimatedStyle,\n    withTiming\n} from \"react-native-reanimated\";\n/*import LinearGradient from \"react-native-linear-gradient\";*/\nimport {LinearGradient} from 'expo-linear-gradient';\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../stores/tab/tabActions\";\n\nimport {\n    Home,\n    Search,\n    CartTab,\n    Favourite,\n    Notification\n} from \"../screens\";\nimport { Header } from \"../components\"\nimport {\n    COLORS,\n    FONTS,\n    SIZES,\n    icons,\n    constants,\n    dummyData\n} from \"../constants\";\n\nconst TabButton = ({label, icon, isFocused, onPress, outerContainerStyle, innerContainerStyle}) => {\n    return(\n        <TouchableWithoutFeedback\n            onPress={onPress}\n        >\n            <Animated.View\n                style={[\n                    {\n                        flex:1,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    },\n                    outerContainerStyle\n                ]}\n            >\n                <Animated.View\n                    style={[\n                        {\n                            flexDirection: 'row',\n                            width: '80%',\n                            height: 50,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            borderRadius: 25\n                        },\n                        innerContainerStyle\n                    ]}\n                >\n                    <Image\n                        source={icon}\n                        style={{\n                            width: 20,\n                            height: 20,\n                            tintColor: isFocused ? COLORS.white : COLORS.gray\n                        }}\n                    />\n                    {isFocused &&\n                        <Text\n                            numberOfLines={1}\n                            style={{\n                                marginLeft: SIZES.base,\n                                color: COLORS.white,\n                                ...FONTS.h3\n                            }}\n                        >\n                            {label}\n                        </Text>\n                    }\n                </Animated.View>\n            </Animated.View>\n\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst MainLayout = ({ drawerAnimationStyle, navigation, selectedTab, setSelectedTab}) => {\n\n    const flatListRef = React.useRef()\n\n    const homeTabFlex = useSharedValue(1)\n    const searchTabColor = useSharedValue(COLORS.white)\n    const searchTabFlex = useSharedValue(1)\n    const cartTabColor = useSharedValue(COLORS.white)\n    const cartTabFlex = useSharedValue(1)\n    const homeTabColor = useSharedValue(COLORS.white)\n    const favouriteTabFlex = useSharedValue(1)\n    const favouriteTabColor = useSharedValue(COLORS.white)\n    const notificationTabFlex = useSharedValue(1)\n    const notificationTabColor = useSharedValue(COLORS.white)\n\n    /* Definisco Reanimated Animated Style */\n\n    const homeFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: homeTabFlex.value\n        }\n    })\n\n    const homeColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: homeTabColor.value\n        }\n    })\n\n    const searchFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: searchTabFlex.value\n        }\n    })\n\n    const searchColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: searchTabColor.value\n        }\n    })\n\n    const cartFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: cartTabFlex.value\n        }\n    })\n\n    const cartColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: cartTabColor.value\n        }\n    })\n\n    const favouriteFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: favouriteTabFlex.value\n        }\n    })\n\n    const favouriteColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: favouriteTabColor.value\n        }\n    })\n\n    const notificationFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: notificationTabFlex.value\n        }\n    })\n\n    const notificationColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: notificationTabColor.value\n        }\n    })\n\n\n    /*Setto come schermata di default (quando non viene selezionato niente) home*/\n    React.useEffect(() => {\n        setSelectedTab(constants.screens.home)\n    }, [])\n\n    React.useEffect(() => {\n        if(selectedTab == constants.screens.home) {\n            /* Bisogna scrollare lungo ListRef in accordo scon quello che viene selezionato nella barra in basso */\n            flatListRef?.current?.scrollToIndex({\n                index: 0,\n                animated: false\n            })\n\n            homeTabFlex.value = withTiming(4, {duration: 500})\n            homeTabColor.value = withTiming(COLORS.primary, {duration: 500})\n        }else {\n            homeTabFlex.value = withTiming(1, {duration: 500})\n            homeTabColor.value = withTiming(COLORS.white, {duration: 500})\n        }\n\n        if(selectedTab == constants.screens.search) {\n            flatListRef?.current?.scrollToIndex({\n                index: 1,\n                animated: false\n            })\n\n            searchTabFlex.value = withTiming(4, {duration: 500})\n            searchTabColor.value = withTiming(COLORS.primary, {duration: 500})\n        }else {\n            searchTabFlex.value = withTiming(1, {duration: 500})\n            searchTabColor.value = withTiming(COLORS.white, {duration: 500})\n        }\n\n        if(selectedTab == constants.screens.cart) {\n            flatListRef?.current?.scrollToIndex({\n                index: 2,\n                animated: false\n            })\n\n            cartTabFlex.value = withTiming(4, {duration: 500})\n            cartTabColor.value = withTiming(COLORS.primary, {duration: 500})\n        }else {\n            cartTabFlex.value = withTiming(1, {duration: 500})\n            cartTabColor.value = withTiming(COLORS.white, {duration: 500})\n        }\n\n        if(selectedTab == constants.screens.favourite) {\n            flatListRef?.current?.scrollToIndex({\n                index: 3,\n                animated: false\n            })\n\n\n            favouriteTabFlex.value = withTiming(4, {duration: 500})\n            favouriteTabColor.value = withTiming(COLORS.primary, {duration: 500})\n        }else {\n            favouriteTabFlex.value = withTiming(1, {duration: 500})\n            favouriteTabColor.value = withTiming(COLORS.white, {duration: 500})\n        }\n\n        if(selectedTab == constants.screens.notification) {\n            flatListRef?.current?.scrollToIndex({\n                index: 4,\n                animated: false\n            })\n\n            notificationTabFlex.value = withTiming(4, {duration: 500})\n            notificationTabColor.value = withTiming(COLORS.primary, {duration: 500})\n        }else {\n            notificationTabFlex.value = withTiming(1, {duration: 500})\n            notificationTabColor.value = withTiming(COLORS.white, {duration: 500})\n        }\n\n\n    }, [selectedTab])\n\n    return (\n        <Animated.View\n            style={{\n                flex: 1,\n                backgroundColor: COLORS.white,\n                ...drawerAnimationStyle\n            }}\n        >\n\n            {/* Header */}\n            <Header\n                containerStyle={{\n                    height: 50,\n                    paddingHorizontal: SIZES.padding,\n                    marginTop: 40,\n                    alignItems: 'center'\n                }}\n                title={selectedTab.toUpperCase()}\n                leftComponent={\n                    <TouchableOpacity\n                        style={{\n                            width: 40,\n                            height: 40,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            borderWidth: 1,\n                            borderColor: COLORS.gray2,\n                            borderRadius: SIZES.radius\n                        }}\n                        onPress={() => navigation.openDrawer()}\n                    >\n                        <Image\n                            source={ icons.menu }\n                        />\n                    </TouchableOpacity>\n                }\n                rightComponent={\n                    <TouchableOpacity\n                        style={{\n                            borderRadius: SIZES.radius,\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <Image\n                            source={dummyData?.myProfile?.profile_image}\n                            style={{\n                                width: 40,\n                                height: 40,\n                                borderRadius: SIZES.radius\n                            }}\n                        />\n                    </TouchableOpacity>\n                }\n            />\n\n            {/* Content */}\n            <View\n                style={{\n                    flex: 1\n                }}\n            >\n            {/* flatListRef permette di scrollare nella pagine gli elementi in\n                accordo con il tab che è stato selezionato in basso */}\n                <FlatList\n                    ref={flatListRef}\n                    horizontal\n                    scrollEnabled={false}\n                    pagingEnabled\n                    snapToAlignment=\"center\"\n                    snapToInterval={SIZES.width}\n                    showsHorizontalScrollIndicator={false}\n                    data={constants.bottom_tabs}\n                    keyExtractor={item => `${item.id}`}\n                    renderItem={({ item, index }) => {\n                        return (\n                            <View\n                                style={{\n                                    height: SIZES.height,\n                                    width: SIZES.width\n                                }}\n                            >\n                                {item.label == constants.screens.home && <Home />}\n                                {item.label == constants.screens.search && <Search />}\n                                {item.label == constants.screens.cart && <CartTab />}\n                                {item.label == constants.screens.favourite && <Favourite />}\n                                {item.label == constants.screens.notification && <Notification />}\n                            </View>\n                        )\n                    }}\n                />\n            </View>\n\n\n            {/* Footer */}\n            <View\n                style={{\n                    height: 100,\n                    justifyContent: 'flex-end'\n                }}\n            >\n                <LinearGradient\n                    start={{x: 0, y: 0}}\n                    end={{x: 0, y: 4}}\n                    colors={[\n                        COLORS.transparent,\n                        COLORS.black\n                    ]}\n                    style={{\n                        position: 'absolute',\n                        top: -20,\n                        left: 0,\n                        right: 0,\n                        height: 100,\n                        borderTopLeftRadius: 15,\n                        borderTopRightRadius: 15\n                    }}\n                />\n\n                <View\n                    style={{\n                        flex: 1,\n                        flexDirection: 'row',\n                        paddingHorizontal: SIZES.radius,\n                        paddingBottom: 10,\n                        borderTopLeftRadius: 20,\n                        borderTopRightRadius: 20,\n                        backgroundColor: COLORS.white\n                    }}\n                >\n                    <TabButton\n                        label={constants.screens.home}\n                        icon={icons.home}\n                        isFocused={selectedTab == constants.screens.home}\n                        outerContainerStyle={homeFlexStyle}\n                        innerContainerStyle={homeColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.home)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.search}\n                        icon={icons.search}\n                        isFocused={selectedTab == constants.screens.search}\n                        outerContainerStyle={searchFlexStyle}\n                        innerContainerStyle={searchColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.search)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.cart}\n                        icon={icons.cart}\n                        isFocused={selectedTab == constants.screens.cart}\n                        outerContainerStyle={cartFlexStyle}\n                        innerContainerStyle={cartColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.cart)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.favourite}\n                        icon={icons.favourite}\n                        isFocused={selectedTab == constants.screens.favourite}\n                        outerContainerStyle={favouriteFlexStyle}\n                        innerContainerStyle={favouriteColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.favourite)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.notification}\n                        icon={icons.notification}\n                        isFocused={selectedTab == constants.screens.notification}\n                        outerContainerStyle={notificationFlexStyle}\n                        innerContainerStyle={notificationColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.notification)}\n                    />\n\n\n\n\n                </View>\n                \n            </View>\n            \n            \n            \n\n        </Animated.View>\n    )\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        selectedTab: state.tabReducer.selectedTab\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setSelectedTab: (selectedTab) => {\n            return dispatch (setSelectedTab(selectedTab))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MainLayout)"]},"metadata":{},"sourceType":"module"}