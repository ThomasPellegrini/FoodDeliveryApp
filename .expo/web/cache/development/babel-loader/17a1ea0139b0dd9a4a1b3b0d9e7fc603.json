{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableOpacityComponent } from \"react-native-web/dist/index\";\nimport { TouchableWithoutFeedbackComponent } from \"react-native-web/dist/index\";\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from \"react-native-reanimated\";\nimport { LinearGradient } from 'expo-linear-gradient';\nimport { connect } from \"react-redux\";\nimport { setSelectedTab as _setSelectedTab } from \"../stores/tab/tabActions\";\nimport { Home, Search, CartTab, Favourite, Notification } from \"../screens\";\nimport { Header } from \"../components\";\nimport { COLORS, FONTS, SIZES, icons, constants, dummyData } from \"../constants\";\n\nvar TabButton = function TabButton(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon,\n      isFocused = _ref.isFocused,\n      onPress = _ref.onPress,\n      outerContainerStyle = _ref.outerContainerStyle,\n      innerContainerStyle = _ref.innerContainerStyle;\n  return React.createElement(TouchableWithoutFeedback, {\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(Animated.View, {\n    style: [{\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center'\n    }, outerContainerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, React.createElement(Animated.View, {\n    style: [{\n      flexDirection: 'row',\n      width: '80%',\n      height: 50,\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: 25\n    }, innerContainerStyle],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: icon,\n    style: {\n      width: 20,\n      height: 20,\n      tintColor: COLORS.gray\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 21\n    }\n  }), isFocused && React.createElement(Text, {\n    numberOfLines: 1,\n    style: _objectSpread({\n      marginLeft: SIZES.base,\n      color: COLORS.gray\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }, label))));\n};\n\nvar MainLayout = function MainLayout(_ref2) {\n  var _dummyData$myProfile;\n\n  var drawerAnimationStyle = _ref2.drawerAnimationStyle,\n      navigation = _ref2.navigation,\n      selectedTab = _ref2.selectedTab,\n      setSelectedTab = _ref2.setSelectedTab;\n  var homeTabFlex = useSharedValue(1);\n  var searchTabColor = useSharedValue(COLORS.white);\n  var searchTabFlex = useSharedValue(1);\n  var cartTabColor = useSharedValue(COLORS.white);\n  var cartTabFlex = useSharedValue(1);\n  var homeTabColor = useSharedValue(COLORS.white);\n  var favouriteTabFlex = useSharedValue(1);\n  var favouriteTabColor = useSharedValue(COLORS.white);\n  var notificationTabFlex = useSharedValue(1);\n  var notificationTabColor = useSharedValue(COLORS.white);\n  var homeFlexStyle = useAnimatedStyle(function () {\n    return {\n      flex: homeTabFlex.value\n    };\n  });\n  var homeColorStyle = useAnimatedStyle(function () {\n    return {\n      backgroundColor: homeTabColor.value\n    };\n  });\n  var searchFlexStyle = useAnimatedStyle(function () {\n    return {\n      flex: searchTabFlex.value\n    };\n  });\n  var searchColorStyle = useAnimatedStyle(function () {\n    return {\n      backgroundColor: searchTabColor.value\n    };\n  });\n  var cartFlexStyle = useAnimatedStyle(function () {\n    return {\n      flex: cartTabFlex.value\n    };\n  });\n  var cartColorStyle = useAnimatedStyle(function () {\n    return {\n      backgroundColor: cartTabColor.value\n    };\n  });\n  var favouriteFlexStyle = useAnimatedStyle(function () {\n    return {\n      flex: favouriteTabFlex.value\n    };\n  });\n  var favouriteColorStyle = useAnimatedStyle(function () {\n    return {\n      backgroundColor: favouriteTabColor.value\n    };\n  });\n  var notificationFlexStyle = useAnimatedStyle(function () {\n    return {\n      flex: notificationTabFlex.value\n    };\n  });\n  var notificationColorStyle = useAnimatedStyle(function () {\n    return {\n      backgroundColor: notificationTabColor.value\n    };\n  });\n  React.useEffect(function () {\n    setSelectedTab(constants.screens.home);\n  }, []);\n  React.useEffect(function () {\n    setSelectedTab(constants.screens.home);\n  }, []);\n  return React.createElement(Animated.View, {\n    style: _objectSpread({\n      flex: 1,\n      backgroundColor: COLORS.white\n    }, drawerAnimationStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    containerStyle: {\n      height: 50,\n      paddingHorizontal: SIZES.padding,\n      marginTop: 40,\n      alignItems: 'center'\n    },\n    title: selectedTab.toUpperCase(),\n    leftComponent: React.createElement(TouchableOpacity, {\n      style: {\n        width: 40,\n        height: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1,\n        borderColor: COLORS.gray2,\n        borderRadius: SIZES.radius\n      },\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: icons.menu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 25\n      }\n    })),\n    rightComponent: React.createElement(TouchableOpacity, {\n      style: {\n        borderRadius: SIZES.radius,\n        alignItems: 'center',\n        justifyContent: 'center'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: dummyData == null ? void 0 : (_dummyData$myProfile = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile.profile_image,\n      style: {\n        width: 40,\n        height: 40,\n        borderRadius: SIZES.radius\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 25\n      }\n    })),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 17\n    }\n  }, \"MainLayout\")), React.createElement(View, {\n    style: {\n      height: 100,\n      justifyContent: 'flex-end'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }, React.createElement(LinearGradient, {\n    start: {\n      x: 0,\n      y: 0\n    },\n    end: {\n      x: 0,\n      y: 4\n    },\n    colors: [COLORS.transparent, COLORS.black],\n    style: {\n      position: 'absolute',\n      top: -20,\n      left: 0,\n      right: 0,\n      height: 100,\n      borderTopLeftRadius: 15,\n      borderTopRightRadius: 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 17\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1,\n      flexDirection: 'row',\n      paddingHorizontal: SIZES.radius,\n      paddingBottom: 10,\n      borderTopLeftRadius: 20,\n      borderTopRightRadius: 20,\n      backgroundColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 17\n    }\n  }, React.createElement(TabButton, {\n    label: constants.screens.home,\n    icon: icons.home,\n    isFocused: selectedTab == constants.screens.home,\n    outerContainerStyle: homeFlexStyle,\n    innerContainerStyle: homeColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.home);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 280,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.search,\n    icon: icons.search,\n    isFocused: selectedTab == constants.screens.search,\n    outerContainerStyle: searchFlexStyle,\n    innerContainerStyle: searchColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.search);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.cart,\n    icon: icons.cart,\n    isFocused: selectedTab == constants.screens.cart,\n    outerContainerStyle: cartFlexStyle,\n    innerContainerStyle: cartColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.cart);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.favourite,\n    icon: icons.favourite,\n    isFocused: selectedTab == constants.screens.favourite,\n    outerContainerStyle: favouriteFlexStyle,\n    innerContainerStyle: favouriteColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.favourite);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 21\n    }\n  }), React.createElement(TabButton, {\n    label: constants.screens.notification,\n    icon: icons.notification,\n    isFocused: selectedTab == constants.screens.notification,\n    outerContainerStyle: notificationFlexStyle,\n    innerContainerStyle: notificationColorStyle,\n    onPress: function onPress() {\n      return setSelectedTab(constants.screens.notification);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 21\n    }\n  }))));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedTab: state.tabReducer.selectedTab\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSelectedTab: function setSelectedTab(selectedTab) {\n      return dispatch(_setSelectedTab(selectedTab));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":{"version":3,"sources":["/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js"],"names":["React","TouchableOpacityComponent","TouchableWithoutFeedbackComponent","Animated","useSharedValue","useAnimatedStyle","withTiming","LinearGradient","connect","setSelectedTab","Home","Search","CartTab","Favourite","Notification","Header","COLORS","FONTS","SIZES","icons","constants","dummyData","TabButton","label","icon","isFocused","onPress","outerContainerStyle","innerContainerStyle","flex","alignItems","justifyContent","flexDirection","width","height","borderRadius","tintColor","gray","marginLeft","base","color","h3","MainLayout","drawerAnimationStyle","navigation","selectedTab","homeTabFlex","searchTabColor","white","searchTabFlex","cartTabColor","cartTabFlex","homeTabColor","favouriteTabFlex","favouriteTabColor","notificationTabFlex","notificationTabColor","homeFlexStyle","value","homeColorStyle","backgroundColor","searchFlexStyle","searchColorStyle","cartFlexStyle","cartColorStyle","favouriteFlexStyle","favouriteColorStyle","notificationFlexStyle","notificationColorStyle","useEffect","screens","home","paddingHorizontal","padding","marginTop","toUpperCase","borderWidth","borderColor","gray2","radius","openDrawer","menu","myProfile","profile_image","x","y","transparent","black","position","top","left","right","borderTopLeftRadius","borderTopRightRadius","paddingBottom","search","cart","favourite","notification","mapStateToProps","state","tabReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    Image,\n    FlatList, TouchableOpacityComponent, TouchableWithoutFeedbackComponent\n} from 'react-native';\n\nimport Animated, {\n    useSharedValue,\n    useAnimatedStyle,\n    withTiming\n} from \"react-native-reanimated\";\n/*import LinearGradient from \"react-native-linear-gradient\";*/\nimport {LinearGradient} from 'expo-linear-gradient';\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../stores/tab/tabActions\";\n\nimport {\n    Home,\n    Search,\n    CartTab,\n    Favourite,\n    Notification\n} from \"../screens\";\nimport { Header } from \"../components\"\nimport {\n    COLORS,\n    FONTS,\n    SIZES,\n    icons,\n    constants,\n    dummyData\n} from \"../constants\";\n\nconst TabButton = ({label, icon, isFocused, onPress, outerContainerStyle, innerContainerStyle}) => {\n    return(\n        <TouchableWithoutFeedback\n            onPress={onPress}\n        >\n            <Animated.View\n                style={[\n                    {\n                        flex:1,\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    },\n                    outerContainerStyle\n                ]}\n            >\n                <Animated.View\n                    style={[\n                        {\n                            flexDirection: 'row',\n                            width: '80%',\n                            height: 50,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            borderRadius: 25\n                        },\n                        innerContainerStyle\n                    ]}\n                >\n                    <Image\n                        source={icon}\n                        style={{\n                            width: 20,\n                            height: 20,\n                            tintColor: COLORS.gray\n                        }}\n                    />\n                    {isFocused &&\n                        <Text\n                            numberOfLines={1}\n                            style={{\n                                marginLeft: SIZES.base,\n                                color: COLORS.gray,\n                                ...FONTS.h3\n                            }}\n                        >\n                            {label}\n                        </Text>\n                    }\n                </Animated.View>\n            </Animated.View>\n\n        </TouchableWithoutFeedback>\n    )\n}\n\nconst MainLayout = ({ drawerAnimationStyle, navigation, selectedTab, setSelectedTab}) => {\n\n    const homeTabFlex = useSharedValue(1)\n    const searchTabColor = useSharedValue(COLORS.white)\n    const searchTabFlex = useSharedValue(1)\n    const cartTabColor = useSharedValue(COLORS.white)\n    const cartTabFlex = useSharedValue(1)\n    const homeTabColor = useSharedValue(COLORS.white)\n    const favouriteTabFlex = useSharedValue(1)\n    const favouriteTabColor = useSharedValue(COLORS.white)\n    const notificationTabFlex = useSharedValue(1)\n    const notificationTabColor = useSharedValue(COLORS.white)\n\n    /* Definisco Reanimated Animated Style */\n\n    const homeFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: homeTabFlex.value\n        }\n    })\n\n    const homeColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: homeTabColor.value\n        }\n    })\n\n    const searchFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: searchTabFlex.value\n        }\n    })\n\n    const searchColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: searchTabColor.value\n        }\n    })\n\n    const cartFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: cartTabFlex.value\n        }\n    })\n\n    const cartColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: cartTabColor.value\n        }\n    })\n\n    const favouriteFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: favouriteTabFlex.value\n        }\n    })\n\n    const favouriteColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: favouriteTabColor.value\n        }\n    })\n\n    const notificationFlexStyle = useAnimatedStyle(() => {\n        return {\n            flex: notificationTabFlex.value\n        }\n    })\n\n    const notificationColorStyle = useAnimatedStyle(() => {\n        return {\n            backgroundColor: notificationTabColor.value\n        }\n    })\n\n\n    React.useEffect(() => {\n        setSelectedTab(constants.screens.home)\n    }, [])\n\n    /*Setto come schermata di default (quando non viene selezionato niente) home*/\n    React.useEffect(() => {\n        setSelectedTab(constants.screens.home)\n    }, [])\n\n    return (\n        <Animated.View\n            style={{\n                flex: 1,\n                backgroundColor: COLORS.white,\n                ...drawerAnimationStyle\n            }}\n        >\n\n            {/* Header */}\n            <Header\n                containerStyle={{\n                    height: 50,\n                    paddingHorizontal: SIZES.padding,\n                    marginTop: 40,\n                    alignItems: 'center'\n                }}\n                title={selectedTab.toUpperCase()}\n                leftComponent={\n                    <TouchableOpacity\n                        style={{\n                            width: 40,\n                            height: 40,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            borderWidth: 1,\n                            borderColor: COLORS.gray2,\n                            borderRadius: SIZES.radius\n                        }}\n                        onPress={() => navigation.openDrawer()}\n                    >\n                        <Image\n                            source={ icons.menu }\n                        />\n                    </TouchableOpacity>\n                }\n                rightComponent={\n                    <TouchableOpacity\n                        style={{\n                            borderRadius: SIZES.radius,\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                    >\n                        <Image\n                            source={dummyData?.myProfile?.profile_image}\n                            style={{\n                                width: 40,\n                                height: 40,\n                                borderRadius: SIZES.radius\n                            }}\n                        />\n                    </TouchableOpacity>\n                }\n            />\n\n            {/* Content */}\n            <View\n                style={{\n                    flex: 1\n                }}\n            >\n                <Text>MainLayout</Text>\n            </View>\n\n\n            {/* Footer */}\n            <View\n                style={{\n                    height: 100,\n                    justifyContent: 'flex-end'\n                }}\n            >\n                <LinearGradient\n                    start={{x: 0, y: 0}}\n                    end={{x: 0, y: 4}}\n                    colors={[\n                        COLORS.transparent,\n                        COLORS.black\n                    ]}\n                    style={{\n                        position: 'absolute',\n                        top: -20,\n                        left: 0,\n                        right: 0,\n                        height: 100,\n                        borderTopLeftRadius: 15,\n                        borderTopRightRadius: 15\n                    }}\n                />\n\n                <View\n                    style={{\n                        flex: 1,\n                        flexDirection: 'row',\n                        paddingHorizontal: SIZES.radius,\n                        paddingBottom: 10,\n                        borderTopLeftRadius: 20,\n                        borderTopRightRadius: 20,\n                        backgroundColor: COLORS.white\n                    }}\n                >\n                    <TabButton\n                        label={constants.screens.home}\n                        icon={icons.home}\n                        isFocused={selectedTab == constants.screens.home}\n                        outerContainerStyle={homeFlexStyle}\n                        innerContainerStyle={homeColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.home)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.search}\n                        icon={icons.search}\n                        isFocused={selectedTab == constants.screens.search}\n                        outerContainerStyle={searchFlexStyle}\n                        innerContainerStyle={searchColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.search)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.cart}\n                        icon={icons.cart}\n                        isFocused={selectedTab == constants.screens.cart}\n                        outerContainerStyle={cartFlexStyle}\n                        innerContainerStyle={cartColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.cart)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.favourite}\n                        icon={icons.favourite}\n                        isFocused={selectedTab == constants.screens.favourite}\n                        outerContainerStyle={favouriteFlexStyle}\n                        innerContainerStyle={favouriteColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.favourite)}\n                    />\n\n                    <TabButton\n                        label={constants.screens.notification}\n                        icon={icons.notification}\n                        isFocused={selectedTab == constants.screens.notification}\n                        outerContainerStyle={notificationFlexStyle}\n                        innerContainerStyle={notificationColorStyle}\n                        onPress={() => setSelectedTab(constants.screens.notification)}\n                    />\n\n\n\n\n                </View>\n                \n            </View>\n            \n            \n            \n\n        </Animated.View>\n    )\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        selectedTab: state.tabReducer.selectedTab\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setSelectedTab: (selectedTab) => {\n            return dispatch (setSelectedTab(selectedTab))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MainLayout)"]},"metadata":{},"sourceType":"module"}