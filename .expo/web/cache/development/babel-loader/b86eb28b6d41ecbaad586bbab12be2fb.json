{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { TouchableOpacityComponent } from \"react-native-web/dist/index\";\nimport Animated, { useSharedValue, useAnimatedStyle, withTiming } from \"react-native-reanimated\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab as _setSelectedTab } from \"../stores/tab/tabActions\";\nimport { Home, Search, CartTab, Favourite, Notification } from \"../screens\";\nimport { Header } from \"../components\";\nimport { COLORS, FONTS, SIZES, icons, constants, dummyData } from \"../constants\";\n\nvar MainLayout = function MainLayout(_ref) {\n  var drawerAnimationStyle = _ref.drawerAnimationStyle,\n      navigation = _ref.navigation,\n      selectedTab = _ref.selectedTab,\n      setSelectedTab = _ref.setSelectedTab;\n  React.useEffect(function () {\n    setSelectedTab(constants.screens.home);\n  }, []);\n  return React.createElement(Animated.View, {\n    style: _objectSpread({\n      flex: 1,\n      alignItems: 'center',\n      justifyContent: 'center',\n      backgroundColor: 'white'\n    }, drawerAnimationStyle),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }\n  }, React.createElement(Header, {\n    containerStyle: {\n      height: 50,\n      paddingHorizontal: SIZES.padding,\n      marginTop: 40,\n      alignItems: 'center'\n    },\n    title: selectedTab.toUpperCase(),\n    leftComponent: React.createElement(TouchableOpacity, {\n      style: {\n        width: 40,\n        height: 40,\n        alignItems: 'center',\n        justifyContent: 'center',\n        borderWidth: 1,\n        borderColor: COLORS.gray2,\n        borderRadius: SIZES.radius\n      },\n      onPress: function onPress() {\n        return navigation.openDrawer();\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }\n    }, React.createElement(Image, {\n      source: icons.menu,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 25\n      }\n    })),\n    rightComponent: React.createElement(TouchableOpacity, {\n      style: {\n        borderRadius: SIZES.radius\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 21\n      }\n    }),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 17\n    }\n  }, \"MainLayout\")));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedTab: state.tabReducer.selectedTab\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSelectedTab: function setSelectedTab(selectedTab) {\n      return dispatch(_setSelectedTab(selectedTab));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainLayout);","map":{"version":3,"sources":["/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/MainLayout.js"],"names":["React","TouchableOpacityComponent","Animated","useSharedValue","useAnimatedStyle","withTiming","connect","setSelectedTab","Home","Search","CartTab","Favourite","Notification","Header","COLORS","FONTS","SIZES","icons","constants","dummyData","MainLayout","drawerAnimationStyle","navigation","selectedTab","useEffect","screens","home","flex","alignItems","justifyContent","backgroundColor","height","paddingHorizontal","padding","marginTop","toUpperCase","width","borderWidth","borderColor","gray2","borderRadius","radius","openDrawer","menu","mapStateToProps","state","tabReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {\n    View,\n    Text,\n    TouchableOpacity,\n    TouchableWithoutFeedback,\n    Image,\n    FlatList, TouchableOpacityComponent\n} from 'react-native';\n\nimport Animated, {\n    useSharedValue,\n    useAnimatedStyle,\n    withTiming\n} from \"react-native-reanimated\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../stores/tab/tabActions\";\n\nimport {\n    Home,\n    Search,\n    CartTab,\n    Favourite,\n    Notification\n} from \"../screens\";\nimport { Header } from \"../components\"\nimport {\n    COLORS,\n    FONTS,\n    SIZES,\n    icons,\n    constants,\n    dummyData\n} from \"../constants\";\n\nconst MainLayout = ({ drawerAnimationStyle, navigation, selectedTab, setSelectedTab }) => {\n\n    /*Setto come schermata di default (quando non viene selezionato niente) home*/\n    React.useEffect(() => {\n        setSelectedTab(constants.screens.home)\n    }, [])\n\n    return (\n        <Animated.View\n            style={{\n                flex: 1,\n                alignItems: 'center',\n                justifyContent: 'center',\n                backgroundColor: 'white',\n                ...drawerAnimationStyle\n            }}\n        >\n\n            {/*Header*/}\n            <Header\n                containerStyle={{\n                    height: 50,\n                    paddingHorizontal: SIZES.padding,\n                    marginTop: 40,\n                    alignItems: 'center'\n                }}\n                title={selectedTab.toUpperCase()}\n                leftComponent={\n                    <TouchableOpacity\n                        style={{\n                            width: 40,\n                            height: 40,\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            borderWidth: 1,\n                            borderColor: COLORS.gray2,\n                            borderRadius: SIZES.radius\n                        }}\n                        onPress={() => navigation.openDrawer()}\n                    >\n                        <Image\n                            source={ icons.menu }\n                        />\n                    </TouchableOpacity>\n                }\n                rightComponent={\n                    <TouchableOpacity\n                        style={{\n                            borderRadius: SIZES.radius\n                        }}\n                    >\n\n                    </TouchableOpacity>\n                }\n            />\n\n            {/*Content*/}\n            <View\n                style={{\n                    flex: 1\n                }}\n            >\n                <Text>MainLayout</Text>\n            </View>\n\n\n            {/*Footer*/}\n\n        </Animated.View>\n    )\n}\n\n\nfunction mapStateToProps(state) {\n    return {\n        selectedTab: state.tabReducer.selectedTab\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setSelectedTab: (selectedTab) => {\n            return dispatch (setSelectedTab(selectedTab))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (MainLayout)"]},"metadata":{},"sourceType":"module"}