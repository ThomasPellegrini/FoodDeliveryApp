{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/Home/FilterModal.js\";\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport Modal from \"react-native-web/dist/exports/Modal\";\nimport { COLORS, FONTS, SIZES, constants, icons } from \"../../constants\";\n\nvar FilterModal = function FilterModal(_ref) {\n  var isVisible = _ref.isVisible,\n      onClose = _ref.onClose;\n  var modalAnimatedValue = React.useRef(new Animated.Value(0)).current;\n\n  var _React$useState = React.useState(isVisible),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      showFilterModal = _React$useState2[0],\n      setShowFilterModal = _React$useState2[1];\n\n  React.useEffect(function () {\n    if (showFilterModal) {\n      Animated.timing(modalAnimatedValue, {\n        toValue: 1,\n        duration: 500,\n        useNativeDriver: false\n      }).start();\n    } else {\n      Animated.timing(modalAnimatedValue, {\n        toValue: 0,\n        duration: 500,\n        useNativeDriver: false\n      }).start(function () {\n        return onClose();\n      });\n    }\n  }, [showFilterModal]);\n  return React.createElement(Modal, {\n    animationType: \"fade\",\n    transparent: true,\n    visible: isVisible,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.transparentBlack7\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, React.createElement(TouchableWithoutFeedback, {\n    onPress: function onPress() {\n      return setShowFilterModal(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 17\n    }\n  }, React.createElement(View, {\n    style: {\n      position: 'absolute',\n      top: 0,\n      left: 0,\n      right: 0,\n      bottom: 0\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 21\n    }\n  })), React.createElement(Animated.View, {\n    style: {\n      position: 'absolute',\n      left: 0,\n      width: \"100%\",\n      height: \"100%\",\n      padding: SIZES.padding,\n      borderTopLeftRadius: SIZES.padding,\n      borderTopRightRadius: SIZES.padding,\n      backgroundColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default FilterModal;","map":{"version":3,"sources":["/home/thomas/ReactNativeProjects/FoodDeliveryApp/screens/Home/FilterModal.js"],"names":["React","COLORS","FONTS","SIZES","constants","icons","FilterModal","isVisible","onClose","modalAnimatedValue","useRef","Animated","Value","current","useState","showFilterModal","setShowFilterModal","useEffect","timing","toValue","duration","useNativeDriver","start","flex","backgroundColor","transparentBlack7","position","top","left","right","bottom","width","height","padding","borderTopLeftRadius","borderTopRightRadius","white"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;;AAUA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,KAA1C;;AAEA,IAAMC,WAAW,GAAG,SAAdA,WAAc,OAA4B;AAAA,MAAzBC,SAAyB,QAAzBA,SAAyB;AAAA,MAAdC,OAAc,QAAdA,OAAc;AAE5C,MAAMC,kBAAkB,GAAGT,KAAK,CAACU,MAAN,CAAa,IAAIC,QAAQ,CAACC,KAAb,CAAmB,CAAnB,CAAb,EAAoCC,OAA/D;;AAIA,wBAA8Cb,KAAK,CAACc,QAAN,CAAeP,SAAf,CAA9C;AAAA;AAAA,MAAOQ,eAAP;AAAA,MAAwBC,kBAAxB;;AAEAhB,EAAAA,KAAK,CAACiB,SAAN,CAAgB,YAAM;AAClB,QAAIF,eAAJ,EAAqB;AACjBJ,MAAAA,QAAQ,CAACO,MAAT,CAAgBT,kBAAhB,EAAoC;AAChCU,QAAAA,OAAO,EAAE,CADuB;AAEhCC,QAAAA,QAAQ,EAAE,GAFsB;AAGhCC,QAAAA,eAAe,EAAE;AAHe,OAApC,EAIGC,KAJH;AAKH,KAND,MAMK;AACDX,MAAAA,QAAQ,CAACO,MAAT,CAAgBT,kBAAhB,EAAoC;AAChCU,QAAAA,OAAO,EAAE,CADuB;AAEhCC,QAAAA,QAAQ,EAAE,GAFsB;AAGhCC,QAAAA,eAAe,EAAE;AAHe,OAApC,EAIGC,KAJH,CAIS;AAAA,eAAMd,OAAO,EAAb;AAAA,OAJT;AAKH;AACJ,GAdD,EAcG,CAACO,eAAD,CAdH;AAkBA,SACI,oBAAC,KAAD;AACI,IAAA,aAAa,EAAC,MADlB;AAEI,IAAA,WAAW,EAAE,IAFjB;AAGI,IAAA,OAAO,EAAER,SAHb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHgB,MAAAA,IAAI,EAAE,CADH;AAEHC,MAAAA,eAAe,EAAEvB,MAAM,CAACwB;AAFrB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOI,oBAAC,wBAAD;AACI,IAAA,OAAO,EAAE;AAAA,aAAMT,kBAAkB,CAAC,KAAD,CAAxB;AAAA,KADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGI,oBAAC,IAAD;AACI,IAAA,KAAK,EAAE;AACHU,MAAAA,QAAQ,EAAE,UADP;AAEHC,MAAAA,GAAG,EAAE,CAFF;AAGHC,MAAAA,IAAI,EAAE,CAHH;AAIHC,MAAAA,KAAK,EAAE,CAJJ;AAKHC,MAAAA,MAAM,EAAE;AALL,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CAPJ,EAqBI,oBAAC,QAAD,CAAU,IAAV;AACI,IAAA,KAAK,EAAE;AACHJ,MAAAA,QAAQ,EAAE,UADP;AAEHE,MAAAA,IAAI,EAAE,CAFH;AAIHG,MAAAA,KAAK,EAAE,MAJJ;AAKHC,MAAAA,MAAM,EAAE,MALL;AAMHC,MAAAA,OAAO,EAAE9B,KAAK,CAAC8B,OANZ;AAOHC,MAAAA,mBAAmB,EAAE/B,KAAK,CAAC8B,OAPxB;AAQHE,MAAAA,oBAAoB,EAAEhC,KAAK,CAAC8B,OARzB;AASHT,MAAAA,eAAe,EAAEvB,MAAM,CAACmC;AATrB,KADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBJ,CALJ,CADJ;AAgDH,CA1ED;;AA4EA,eAAe9B,WAAf","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    Animated,\n    ScrollView,\n    TouchableWithoutFeedback,\n    Modal\n} from \"react-native\";\n\nimport { COLORS, FONTS, SIZES, constants, icons } from \"../../constants\";\n\nconst FilterModal = ({ isVisible, onClose }) => {\n\n    const modalAnimatedValue = React.useRef(new Animated.Value(0)).current\n\n    // Creo questa const invece di usare direttamente isVisible perchè\n    // poi sara più facile animare il Modal con tutti i filtri\n    const [showFilterModal, setShowFilterModal] = React.useState(isVisible)\n\n    React.useEffect(() => {\n        if (showFilterModal) {\n            Animated.timing(modalAnimatedValue, {\n                toValue: 1,\n                duration: 500,\n                useNativeDriver: false\n            }).start();\n        }else{\n            Animated.timing(modalAnimatedValue, {\n                toValue: 0,\n                duration: 500,\n                useNativeDriver: false\n            }).start(() => onClose());\n        }\n    }, [showFilterModal])\n\n\n\n    return (\n        <Modal\n            animationType=\"fade\"\n            transparent={true}\n            visible={isVisible}\n        >\n            <View\n                style={{\n                    flex: 1,\n                    backgroundColor: COLORS.transparentBlack7\n                }}\n            >\n                {/*Transparent Background*/}\n                <TouchableWithoutFeedback\n                    onPress={() => setShowFilterModal(false)}\n                >\n                    <View\n                        style={{\n                            position: 'absolute',\n                            top: 0,\n                            left: 0,\n                            right: 0,\n                            bottom: 0\n                        }}\n                    />\n                </TouchableWithoutFeedback>\n\n                <Animated.View\n                    style={{\n                        position: 'absolute',\n                        left: 0,\n                        //top\n                        width: \"100%\",\n                        height: \"100%\",\n                        padding: SIZES.padding,\n                        borderTopLeftRadius: SIZES.padding,\n                        borderTopRightRadius: SIZES.padding,\n                        backgroundColor: COLORS.white\n                    }}\n                >\n\n                </Animated.View>\n\n\n            </View>\n\n        </Modal>\n    )\n}\n\nexport default FilterModal\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n"]},"metadata":{},"sourceType":"module"}