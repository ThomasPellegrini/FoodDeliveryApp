{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/home/thomas/ReactNativeProjects/FoodDeliveryApp/navigation/CustomDrawer.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { TouchableOpacityComponent } from \"react-native-web/dist/index\";\nimport { createDrawerNavigator, DrawerContentScrollView } from \"@react-navigation/drawer\";\nimport Animated from \"react-native-reanimated\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab as _setSelectedTab } from \"../stores/tab/tabActions\";\nimport { MainLayout } from \"../screens\";\nimport { COLORS, SIZES, FONTS, constants, icons, dummyData } from \"../constants\";\nvar Drawer = createDrawerNavigator();\n\nvar CustomDrawerItem = function CustomDrawerItem(_ref) {\n  var label = _ref.label,\n      icon = _ref.icon,\n      isFocused = _ref.isFocused,\n      onPress = _ref.onPress;\n  return React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      height: 40,\n      marginBottom: SIZES.base,\n      alignItems: 'center',\n      paddingLeft: SIZES.radius,\n      borderRadius: SIZES.base,\n      backgroundColor: isFocused ? COLORS.transparentBlack1 : null\n    },\n    onPress: onPress,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Image, {\n    source: icon,\n    style: {\n      width: 20,\n      height: 20,\n      tintColor: COLORS.white\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }), React.createElement(Text, {\n    style: _objectSpread({\n      marginLeft: 15,\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }\n  }, label));\n};\n\nvar CustomDrawerContent = function CustomDrawerContent(_ref2) {\n  var _dummyData$myProfile, _dummyData$myProfile2;\n\n  var navigation = _ref2.navigation,\n      selectedTab = _ref2.selectedTab,\n      setSelectedTab = _ref2.setSelectedTab;\n  return React.createElement(DrawerContentScrollView, {\n    scrollEnabled: true,\n    contentContainerStyle: {\n      flex: 1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: {\n      flex: 1,\n      paddingHorizontal: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, React.createElement(View, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: {\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    onPress: function onPress() {\n      return navigation.closeDrawer();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, React.createElement(Image, {\n    source: icons.cross,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 25\n    }\n  }))), React.createElement(TouchableOpacity, {\n    style: {\n      flexDirection: 'row',\n      marginTop: SIZES.radius,\n      alignItems: 'center'\n    },\n    onPress: function onPress() {\n      return console.log(\"Profile\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, React.createElement(Image, {\n    source: (_dummyData$myProfile = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile.profile_image,\n    style: {\n      width: 50,\n      height: 50,\n      borderRadius: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      marginLeft: SIZES.radius\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.h3),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 25\n    }\n  }, (_dummyData$myProfile2 = dummyData.myProfile) == null ? void 0 : _dummyData$myProfile2.name), React.createElement(Text, {\n    style: _objectSpread({\n      color: COLORS.white\n    }, FONTS.body4),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 25\n    }\n  }, \"View your profile\"))), React.createElement(View, {\n    style: {\n      flex: 1,\n      marginTop: SIZES.padding\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, React.createElement(CustomDrawerItem, {\n    label: constants.screens.home,\n    icon: icons.home,\n    isFocused: selectedTab == constants.screens.home,\n    onPress: function onPress() {\n      setSelectedTab(constants.screens.home);\n      navigation.navigate(\"MainLayout\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.my_wallet,\n    icon: icons.wallet,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.notification,\n    icon: icons.notification,\n    isFocused: selectedTab == constants.screens.notification,\n    onPress: function onPress() {\n      setSelectedTab(constants.screens.notification);\n      navigation.navigate(\"MainLayout\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: constants.screens.favourite,\n    icon: icons.favourite,\n    isFocused: selectedTab == constants.screens.favourite,\n    onPress: function onPress() {\n      setSelectedTab(constants.screens.favourite);\n      navigation.navigate(\"MainLayout\");\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  }), React.createElement(View, {\n    style: {\n      height: 1,\n      marginVertical: SIZES.radius,\n      marginLeft: SIZES.radius,\n      backgroundColor: COLORS.lightGray1\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Track your order\",\n    icon: icons.location,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Coupons\",\n    icon: icons.coupon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Settings\",\n    icon: icons.setting,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Invite a Friend\",\n    icon: icons.profile,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }), React.createElement(CustomDrawerItem, {\n    label: \"Help Center\",\n    icon: icons.help,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: {\n      marginBottom: SIZES.padding\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 17\n    }\n  }, React.createElement(CustomDrawerItem, {\n    label: \"Logout\",\n    icon: icons.logout,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 219,\n      columnNumber: 21\n    }\n  }))));\n};\n\nvar CustomDrawer = function CustomDrawer(_ref3) {\n  var selectedTab = _ref3.selectedTab,\n      setSelectedTab = _ref3.setSelectedTab;\n\n  var _React$useState = React.useState(new Animated.Value(0)),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      progress = _React$useState2[0],\n      setProgress = _React$useState2[1];\n\n  var scale = Animated.interpolateNode(progress, {\n    inputRange: [0, 1],\n    outputRange: [1, 0.8]\n  });\n  var borderRadius = Animated.interpolateNode(progress, {\n    inputRange: [0, 1],\n    outputRange: [0, 26]\n  });\n  var animatedStyle = {\n    borderRadius: borderRadius,\n    transform: [{\n      scale: scale\n    }]\n  };\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      backgroundColor: COLORS.primary\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, React.createElement(Drawer.Navigator, {\n    drawerType: \"slide\",\n    overlayColor: \"transparent\",\n    drawerStyle: {\n      flex: 1,\n      width: '65%',\n      paddingRight: 20,\n      backgroundColor: 'transparent'\n    },\n    sceneContainerStyle: {\n      backgroundColor: 'transparent'\n    },\n    initialRouteName: \"MainLayout\",\n    drawerContent: function drawerContent(props) {\n      setTimeout(function () {\n        setProgress(props.progress);\n      }, 0);\n      return React.createElement(CustomDrawerContent, {\n        navigation: props.navigation,\n        selectedTab: selectedTab,\n        setSelectedTab: setSelectedTab,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 29\n        }\n      });\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 17\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"MainLayout\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 21\n    }\n  }, function (props) {\n    return React.createElement(MainLayout, _extends({}, props, {\n      drawerAnimationStyle: animatedStyle,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 35\n      }\n    }));\n  })));\n};\n\nfunction mapStateToProps(state) {\n  return {\n    selectedTab: state.tabReducer.selectedTab\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    setSelectedTab: function setSelectedTab(selectedTab) {\n      return dispatch(_setSelectedTab(selectedTab));\n    }\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomDrawer);","map":{"version":3,"sources":["/home/thomas/ReactNativeProjects/FoodDeliveryApp/navigation/CustomDrawer.js"],"names":["React","TouchableOpacityComponent","createDrawerNavigator","DrawerContentScrollView","Animated","connect","setSelectedTab","MainLayout","COLORS","SIZES","FONTS","constants","icons","dummyData","Drawer","CustomDrawerItem","label","icon","isFocused","onPress","flexDirection","height","marginBottom","base","alignItems","paddingLeft","radius","borderRadius","backgroundColor","transparentBlack1","width","tintColor","white","marginLeft","color","h3","CustomDrawerContent","navigation","selectedTab","flex","paddingHorizontal","justifyContent","closeDrawer","cross","marginTop","console","log","myProfile","profile_image","name","body4","padding","screens","home","navigate","my_wallet","wallet","notification","favourite","marginVertical","lightGray1","location","coupon","setting","profile","help","logout","CustomDrawer","useState","Value","progress","setProgress","scale","interpolateNode","inputRange","outputRange","animatedStyle","transform","primary","paddingRight","props","setTimeout","mapStateToProps","state","tabReducer","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport {\n    View,\n    Text,\n    Image,\n    TouchableOpacity, TouchableOpacityComponent\n} from \"react-native\";\nimport {\n    createDrawerNavigator,\n    DrawerContentScrollView\n} from \"@react-navigation/drawer\";\nimport Animated from \"react-native-reanimated\";\nimport { connect } from \"react-redux\";\nimport { setSelectedTab } from \"../stores/tab/tabActions\";\nimport { MainLayout } from '../screens'\nimport {\n    COLORS,\n    SIZES,\n    FONTS,\n    constants,\n    icons,\n    dummyData\n} from \"../constants\";\n\nconst Drawer = createDrawerNavigator()\n\nconst CustomDrawerItem = ({label, icon, isFocused, onPress }) => {\n    /*console.log(isFocused)*/\n    return (\n        <TouchableOpacity\n            style={{\n                flexDirection: 'row',\n                height: 40,\n                marginBottom: SIZES.base,\n                alignItems: 'center',\n                paddingLeft: SIZES.radius,\n                borderRadius: SIZES.base,\n                backgroundColor: isFocused ? COLORS.transparentBlack1 : null\n            }}\n            onPress={onPress}\n\n        >\n            <Image\n                source={icon}\n                style={{\n                    width: 20,\n                    height: 20,\n                    tintColor: COLORS.white\n                }}\n            />\n            <Text\n                style={{\n                    marginLeft: 15,\n                    color: COLORS.white,\n                    ...FONTS.h3\n                }}\n            >\n                {label}\n            </Text>\n        </TouchableOpacity>\n    )\n}\n\nconst CustomDrawerContent = ({navigation, selectedTab, setSelectedTab}) => {\n    return (\n        <DrawerContentScrollView\n            scrollEnabled={true}\n            contentContainerStyle={{ flex: 1 }}\n        >\n            <View\n                style={{\n                    flex: 1,\n                    paddingHorizontal: SIZES.radius\n                }}\n            >\n                {/* Close Button */}\n                <View\n                    style={{\n                        alignItems: 'center',\n                        justifyContent: 'center'\n                    }}\n                >\n                    <TouchableOpacity\n                        style={{\n                            alignItems: 'center',\n                            justifyContent: 'center'\n                        }}\n                        onPress={() => navigation.closeDrawer()}\n                    >\n                        <Image\n                            source={icons.cross}\n\n                        />\n                    </TouchableOpacity>\n                </View>\n\n\n                {/* Profile */}\n                <TouchableOpacity\n                    style={{\n                        flexDirection: 'row',\n                        marginTop: SIZES.radius,\n                        alignItems: 'center'\n                    }}\n                    onPress={() => console.log(\"Profile\")}\n                >\n                    <Image\n                        source={dummyData.myProfile?.profile_image}\n                        style={{\n                            width: 50,\n                            height: 50,\n                            borderRadius: SIZES.radius\n                        }}\n                    />\n\n                    <View\n                        style={{\n                            marginLeft:SIZES.radius\n                        }}\n                    >\n                        <Text\n                            style={{\n                                color: COLORS.white,\n                                ...FONTS.h3\n                            }}\n                        >{dummyData.myProfile?.name}</Text>\n                        <Text\n                            style={{\n                                color: COLORS.white,\n                                ...FONTS.body4\n                            }}>View your profile</Text>\n                    </View>\n                </TouchableOpacity>\n\n\n                {/* Drawer Items */}\n                <View\n                    style={{\n                        flex: 1,\n                        marginTop: SIZES.padding\n                    }}\n                >\n                    <CustomDrawerItem\n                        label={constants.screens.home}\n                        icon={icons.home}\n                        isFocused={selectedTab == constants.screens.home}\n                        onPress={() => {\n                            setSelectedTab(constants.screens.home)\n                            navigation.navigate(\"MainLayout\")\n                        }}\n                    />\n\n                    <CustomDrawerItem\n                        label={constants.screens.my_wallet}\n                        icon={icons.wallet}\n                    />\n\n                    <CustomDrawerItem\n                        label={constants.screens.notification}\n                        icon={icons.notification}\n                        isFocused={selectedTab == constants.screens.notification}\n                        onPress={() => {\n                            setSelectedTab(constants.screens.notification)\n                            navigation.navigate(\"MainLayout\")\n                        }}\n                    />\n\n                    <CustomDrawerItem\n                        label={constants.screens.favourite}\n                        icon={icons.favourite}\n                        isFocused={selectedTab == constants.screens.favourite}\n                        onPress={() => {\n                            setSelectedTab(constants.screens.favourite)\n                            navigation.navigate(\"MainLayout\")\n                        }}\n                    />\n\n                     {/* Line Divider */}\n                    <View\n                        style={{\n                            height: 1,\n                            marginVertical: SIZES.radius,\n                            marginLeft: SIZES.radius,\n                            backgroundColor: COLORS.lightGray1\n                        }}\n                    />\n\n                    <CustomDrawerItem\n                        label= \"Track your order\"\n                        icon={icons.location}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Coupons\"\n                        icon={icons.coupon}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Settings\"\n                        icon={icons.setting}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Invite a Friend\"\n                        icon={icons.profile}\n                    />\n\n                    <CustomDrawerItem\n                        label=\"Help Center\"\n                        icon={icons.help}\n                    />\n                </View>\n\n                <View\n                    style={{\n                        marginBottom: SIZES.padding\n                    }}\n                >\n                    <CustomDrawerItem\n                        label=\"Logout\"\n                        icon={icons.logout}\n                    />\n                </View>\n\n            </View>\n        </DrawerContentScrollView>\n    )\n}\n\nconst CustomDrawer = ({ selectedTab, setSelectedTab }) => {\n\n    const [progress, setProgress] = React.useState(new Animated.Value(0))\n\n    const scale = Animated.interpolateNode(progress, {\n        inputRange: [0, 1],\n        outputRange: [1, 0.8]\n    })\n\n    const borderRadius = Animated.interpolateNode(progress, {\n        inputRange: [0,1],\n        outputRange: [0,26]\n    })\n\n    const animatedStyle = { borderRadius, transform: [{ scale }] }\n\n    return (\n        <View\n            style={{\n                flex: 1,\n                backgroundColor: COLORS.primary\n            }}\n        >\n                <Drawer.Navigator\n                    drawerType={\"slide\"}\n                    overlayColor={\"transparent\"}\n                    drawerStyle={{\n                        flex: 1,\n                        width: '65%',\n                        paddingRight: 20,\n                        backgroundColor: 'transparent'\n                    }}\n                    sceneContainerStyle={{\n                        backgroundColor: 'transparent'\n                    }}\n                    initialRouteName=\"MainLayout\"\n                    drawerContent={props => {\n                        setTimeout(() => {\n                            setProgress(props.progress)\n                        }, 0)\n\n                        return (\n                            <CustomDrawerContent\n                                navigation={props.navigation}\n                                /* Passiamo selectedTab così quando clicchiamo su un drawer item ne tianomo traccia */\n                                selectedTab={selectedTab}\n                                setSelectedTab={setSelectedTab}\n                            />\n                        )\n                    }}\n                >\n\n                    <Drawer.Screen name={\"MainLayout\"}>\n                        {props => <MainLayout {...props} drawerAnimationStyle={animatedStyle}/>}\n                    </Drawer.Screen>\n\n                </Drawer.Navigator>\n        </View>\n    )\n}\n\n\n\nfunction mapStateToProps(state) {\n    return {\n        selectedTab: state.tabReducer.selectedTab\n    }\n}\n\nfunction mapDispatchToProps(dispatch){\n    return {\n        setSelectedTab: (selectedTab) => {\n            return dispatch (setSelectedTab(selectedTab))\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps) (CustomDrawer)\n\n\n"]},"metadata":{},"sourceType":"module"}